pipeline {
    agent any
    
    environment {
        // Define environment variables for Docker Hub credentials
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        // Define your Docker Hub username and image name
        DOCKER_IMAGE = 'your-dockerhub-username/your-image-name'
        // Define your GitHub repository URL
        GITHUB_REPO = 'https://github.com/your-username/your-repo.git'
    }
    
    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning repository from GitHub...'
                git branch: 'main', url: "${env.GITHUB_REPO}"
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building the application...'
                // Assuming a Node.js project - adjust for your build tool
                sh 'npm install'
                sh 'npm run build'
            }
        }
        
        stage('Test') {
            steps {
                echo 'Running tests...'
                // Run your test commands - adjust for your testing framework
                sh 'npm test'
                
                // For Java projects, you might use:
                // sh 'mvn test'
                
                // For Python projects, you might use:
                // sh 'python -m pytest'
            }
            
            post {
                always {
                    // Publish test results (if using JUnit format)
                    junit '**/test-results.xml' 
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                script {
                    // Build the Docker image
                    dockerImage = docker.build "${env.DOCKER_IMAGE}:${env.BUILD_ID}"
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to Docker Hub...'
                script {
                    // Login to Docker Hub
                    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                        dockerImage.push()
                        // Also push with 'latest' tag
                        dockerImage.push('latest')
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully!'
            // You can add notifications here (email, Slack, etc.)
        }
        failure {
            echo 'Pipeline failed!'
            // You can add failure notifications here
        }
        always {
node {
            echo 'Cleaning up workspace...'
            cleanWs()
}
        }
    }
}
